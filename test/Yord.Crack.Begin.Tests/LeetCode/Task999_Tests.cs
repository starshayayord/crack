using NUnit.Framework;
using Yord.Crack.Begin.LeetCode;

namespace Yord.Crack.Begin.Tests.LeetCode
{
    [TestFixture]
    public class Task999_Tests
    {
        [Test]
        public void Should_NumRookCaptures()
        {
            Assert.AreEqual(3, Task999.NumRookCaptures(new[]
            {
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', '.', '.', 'p', '.', '.', '.', '.'},
                new[] {'.', '.', '.', 'R', '.', '.', '.', 'p'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', '.', '.', 'p', '.', '.', '.', '.'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'}
            }));

            Assert.AreEqual(0, Task999.NumRookCaptures(new[]
            {
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', 'p', 'p', 'p', 'p', 'p', '.', '.'},
                new[] {'.', 'p', 'p', 'B', 'p', 'p', '.', '.'},
                new[] {'.', 'p', 'B', 'R', 'B', 'p', '.', '.'},
                new[] {'.', 'p', 'p', 'B', 'p', 'p', '.', '.'},
                new[] {'.', 'p', 'p', 'p', 'p', 'p', '.', '.'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'}
            }));

            Assert.AreEqual(3, Task999.NumRookCaptures(new[]
            {
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', '.', '.', 'p', '.', '.', '.', '.'},
                new[] {'.', '.', '.', 'p', '.', '.', '.', '.'},
                new[] {'p', 'p', '.', 'R', '.', 'p', 'B', '.'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'},
                new[] {'.', '.', '.', 'B', '.', '.', '.', '.'},
                new[] {'.', '.', '.', 'p', '.', '.', '.', '.'},
                new[] {'.', '.', '.', '.', '.', '.', '.', '.'}
            }));
        }
    }
}
