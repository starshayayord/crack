namespace Yord.Crack.Begin.Chapter6
{
    // Есть кольцо, можно сыграть в одну из двух игр
    // 1. Один бросок в кольцо
    // 2. Три попытки, но для победы нужно минимум 2 попадания
    // Если Р - вероятность попадания, при каких значениях Р какую игру стоит выбрать
    public class Task2
    {
        // вероятность выигрыша в первой игре равна Р
        // вероятность выигрышва во второй игре = сумма вероятностей Р(3/3) и Р(2/3).
        // вероятность независимых событий умножается, вероятность взаимоисключающих - складывается
        // P(3/3) = Р*Р*Р
        // Р(2/3) = (промах*попадание*попадание) + (попадание*промах*попадание) + (попадание*попадание*промах)
        // Р(3/3) + Р(2/3) = Р*Р*Р + ((1-Р)*Р*Р) + (Р*(1-Р)*Р) + (Р*Р*(1-Р)) = 3*(P^2) + 2*(P^2)
        // Выбираем первую игру, когда P1 > P2, т.е.
        // P>3*(P^2) + 2*(P^2)
        // 2(P^2) - 3P + 1 > 0
        // Находим корни квадратного уравнения 2(P^2) - 3P + 1 = 0;
        // (-b +- sqrt(b^2 - 4ac)) / 2a => 0.5 и 1
        // раскладываем уравнение по корням a(x-x1)(x-x2)
        // 2(p-0.5)(p-1) = (2p-1)(p-1)
        // (p-1) всегда <0, т.к. p < 1
        // тогда (2p-1)(p-1) > 0, когда (2p-1) < 0
        // 2p<1 => p<0.5, т.е выбираем первую игру, когда p<0.5
        // ВАЖНО уточнить, что :
        // Р=1 (обе игры выигрышны), Р=0 (обе проигрышны), P=0.5 (вероятности равны) можно выбрать любую игру  
    }
}
