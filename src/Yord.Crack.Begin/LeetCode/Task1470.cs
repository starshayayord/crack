namespace Yord.Crack.Begin.LeetCode
{
    // дан массив [x1,x2,x3....,y1,y2,y3..] вернуть [x1,y1,x2,y2...]. 2N - длина массива. Все числа - неотрицательные.
    public class Task1470
    {
        public static int[] Shuffle(int[] nums, int n)
        {
            var r = new int[nums.Length];
            for (int i = 0; i < n; i++)
            {
                r[2 * i] = nums[i]; // четные равны Хам, т.е. просто по порядку
                r[2 * i + 1] = nums[i + n]; // нечетные равны n+1 по порядку
            }

            return r;
        }

        public static int[] Shuffle_NoSpace(int[] nums, int n)
        {
            int i = 0;
            while (i < 2 * n) //  до конца массива
            {
                int j = i; //ищем хелаемый индекс начиная от текущего
                while (nums[i] >= 0) //пока на iом индексе не на встало число, которое должно там стоять
                {
                    // положенный индекс текущего числа равен для левой части 2j для правой части (j-n)*2+1 
                    j = j < n ? 2 * j : (j - n) * 2 + 1;
                    // для номеров, которые встали на нужный индекс ставим -, чтоб не перебирать их снова
                    int t = nums[i]; // для этого числа нашли положенный индекс
                    nums[i] = nums[j]; //ставим число с желаемого индекса на место переставляемого
                    nums[j] = -t; //ставим текущее помеченное "-" число на желаемый индекс
                }
                i++; // на iом месте стоит верное число, переходим к следующему
            }

            for (i = 0; i < 2 * n; i++)
            {
                nums[i] = -nums[i];
            }

            return nums;
        }
    }
}
